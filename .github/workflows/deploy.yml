name: Deploy to DigitalOcean via SSH

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to DigitalOcean via SSH
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy on DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          port: 22
          script: |
            git config --global --add safe.directory ${{ secrets.APP_DIRECTORY }}
            cd ${{ secrets.APP_DIRECTORY }}
            git stash push -m "Stash before deployment"
            git pull origin main
            git stash pop || echo "No changes to apply from stash" || true
            cd ${{ secrets.ROOT_DIRECTORY }}
            sudo docker compose down
            sudo docker compose up -d --build --no-deps vapeshop-app backend-webserver queue-worker scheduler
            sudo docker exec vapeshop-app php artisan migrate --force
            sudo docker exec vapeshop-app php artisan config:cache
            sudo docker exec vapeshop-app php artisan route:cache
            sudo docker exec vapeshop-app php artisan optimize:clear
            cd ${{ secrets.APP_DIRECTORY }}
            sudo chown -R www-data:www-data storage bootstrap/cache
            sudo chmod -R 775 storage bootstrap/cache


      # - name: Set up SSH
      #   run: |
      #     mkdir -p ~/.ssh
      #     echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_ed25519
      #     chmod 600 ~/.ssh/id_ed25519
      #     ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      # - name: Deploy on EC2
      #   run: |
      #     ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
      #       cd ${{ secrets.APP_DIRECTORY }} &&
      #       git pull origin main &&
      #       sudo docker compose down &&
      #       sudo docker compose up -d --build &&
      #       sudo docker exec vapeshop_app php artisan migrate --force &&
      #       sudo docker exec vapeshop_app php artisan config:cache &&
      #       sudo docker exec vapeshop_app php artisan route:cache &&
      #       sudo docker exec vapeshop_app php artisan optimize:clear &&
      #       sudo docker exec vapeshop_app php artisan queue:restart &&
      #       sudo chown -R www-data:www-data storage bootstrap/cache &&
      #       sudo chmod -R 775 storage bootstrap/cache
      #     "
